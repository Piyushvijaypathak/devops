[root@ip-172-31-33-99 ec2-user]# history
    1  yum install -y java-1.8.0-openjdk-devel.x86_64
    2  sudo wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.54/bin/apache-tomcat-9.0.54.tar.gz
    3  ls
    4  tar -xvf apache-tomcat-9.0.54.tar.gz
    5  ls
    6  cd apache-tomcat-9.0.54
    7  ls
    8  chmod 777 weapp
    9  chmod 777 webapps/
   10  cd webapps/manager/META-INF/
   11  ls
   12  vi context.xml------------------------remove valve line----allow line
   13  cd ../..
   14  cd apache-tomcat-9.0.54
   15  cd ..
   16  ls
   17  cd conf
   18  ls
   19  vi tomcat-users.xml------------------------------manager-gui,managerscript--------"must and shoud b/w"
   20  cd ..
   21  ls
   22  cd bin
   23  ./startup.sh
   24  history
   25  cd ..
   26  ls
   27  cd webapps/
   28  ls
   29  cd mywe.war
   30  cat myweb.war
   31  ls
   32  cd myweb
   33  ls
   34  cat index.jsp
   35  cd..
   36  cd../../
   37  cd../../../
   38  cd ../../../
   39  history
[root@ip-172-31-33-99 ec2-user]#



  <role rolename="manager-gui"/>
  <role rolename="manager-script"/>
  <user username="tomcat" password="tomcat" roles="manager-gui,manager-script"/>


____________________________________________________________________________________

jenkins


Step1. Create the YumRepo File.

vim /etc/yum.repos.d/epelfordaemonize.repo

[daemonize]
baseurl=https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/
gpgcheck=no
enabled=yes


 yum install daemonize -

________________________________________________
   /var/lib/jenkins/workspace
   /var/lib/jenkins/job
______________________________________________________________
        yum install -y java-1.8.0-openjdk-devel.x86_64
        yum install -y git



 sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo

 sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
 sudo yum upgrade
 sudo yum install epel-release java-11-openjdk-devel
 sudo yum install jenkins
 sudo systemctl daemon-reload
 sudo systemctl start jenkins




       sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
    7  sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
    8  yum install -y jenkins


    9  service jenkins start

   10  cat /var/lib/jenkins/secrets/initialAdminPassword

   11  cd /var/lib/jenkins/
   12  ls
   13  cd workspace/
   14  ls
   15  history

____________________________________________________________

maven


  sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
  sudo sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
     sudo yum install -y apache-maven
_________________________________________________________________



tomcat server --------need take separate instace in same avilabity zone.

  yum install -y java-1.8.0-openjdk-devel.x86_64
     sudo wget https://mirrors.estointernet.in/apache/tomcat/tomcat-9/v9.0.46/bin/apache-tomcat-9.0.46.tar.gz
     ls
     tar -xvf apache-tomcat-9.0.46.tar.gz
     ls
   
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


jenkins ===>> CI / CD tool.

continueos intergration and continueos deployment tool.

jenkins is automation tool.

jenkins port number ==>> 8080

/etc/sysconfig/jenkins

jenkins ===>>> to overcome water fall model and agile methodologies ( draw backs / manual ) ===>> jenkins ( automation)..

Jenkins is the heart of the devops ..

we will integrate with all devops tools with jenkins and deploy the applications..==>> dev / Qa / uat / prod.

jenkins ==>> jobs create ==>> run ==>> build.

jenkins ==>> we have two types of jobs.

1. free style jobs ( jenkins dash board ===>>> GUI )

2. Pipeline jobs.. ( jenkins dash board ===>>> Groovy script and github ==>> jenkinsfile)

jenkins ===>> plugins ==>>> install ===>> extranal features adding to our jenkins dashboard.

jenkins ===>> plugins ==>>> 3 ways to install..

jenkins ==>> build triggers ===>> pollscm , build periodically ( cron expression ), webhooks..

jenkins ==>> all devops tool integrate with jenkins.

jenkins ==>>>> we will create parameterized jobs..

jenkins ==>>> sequential jobs ( upstream and downstream jobs) and parallel jobs..

jenkins ===>>> master / slave architecture.

jenkins ==>>> backup

jenkins ==>>> security.

jenkins ==>>> users to create.

jenkins ==>> upgrade.

jenkins ==>> automate with the help of jobs..

Jenkins ==>>> important configuration files..

1. jenkins home directory : /var/lib/jenkins.

2. installed plugins : /var/lib/jenkins/plugins

3. created jobs list : /var/lib/jenkins/workspace

4. nodes information : /var/lib/jenkins/nodes

5. jenkins logs information : /var/lib/jenkins/logs

6. list of jobs ==>> /var/lib/jenkins/jobs

7. created users list : /var/lib/jenkins/users.

Jenkins installation steps :

1. we need to take one ec2 instance and login into that ec2 instance.

2. java install

3. git install

4. maven install

5. jenkins install ( 3 steps)

6. start the jenkins service ==>>> service jenkins start

7. jenkins ec2instance==>> publicip:8080(  browser) ==>>> enter

8. jenkins dash board ==>> display ==>> path /var/lib/jenkins/secrets/initialadminpasswd ===>>> copy this path

9. go to jenkins ec2 instace ==>>> cat /var/lib/jenkins/secrets/initialadminpasswd ==>> enter ===>> encrypted password ==>> copy

10. paste it into jenkins dashboard ==>> box .

11. select suggested plugins ==>> click

12. username , password , conformpassword , email ===>> continure ==>> your jenkins dashboard is ready..

=================================================================================================================================

Automation project 1:

1. we need to create one ec2 instance and login into that ec2 instance===>> install tomcat.

2. we need to install deploy to container plugin in jenkins dashboard.( war file copy ==>>> source to destination)

3. create a jenkins job in jenkins dashboard.

===================================================================================================

pollscm : cron expression

build periodically : cron expression

webhooks : triggering concept ===>> we will create webhooks in github ===>> webhooks ==>> jenkins url ==>> event ==>> developer ==>> any modification ==>>> build trigger ==>> deployemnt..

********difference between pollscm ,buildperodically , webhooks..

build periodically ==>> cross expression based ==>> schedule ==>> developer modify / un modify ==>>> automatically jobs ==>> build ==>>> deployments ==>>> jenkins instance ==>> CPU / DISK / MEMORY / NETWORK utilization increase ==>> jenkins instance hung state.

poll scm :==>> cron expression based ==>> schedule ==>> developer modify ==>>> automatically jobs ==>> build ==>>> deployments.

webhooks : event based ==>> developer ==>> any modification ==>> imediately action will takes palce.==>> jobs run ==>> deployments..

===========================================================================================================================

How to change your jenkins port number ??

jenkins instance ==>>> vi /etc/sysconfig/jenkins

jenkins_PORT = 8080 ==>>> modify ==>>> 2025

jenkins service stop ==>>> service jenkins stop

jenkins service start ==>>> service jenkins start

==============================================================================

parameterized builds :

we need to install git parameter plugin install..

senario :

developer ==>>> request raise to ops team ( ours)

can you please test the war file is generated or not  in dev / master / feture branch ??

========================================================================================================
=====================================================================================

How to create users in jenkins ??

jenkins dashboard ==>> manage jenkins ==>> manage users ==> create user ==>> bhargavi , password , conform password , email..

=============================================================================================================

how take backup of the jenkins instance.

Backup ==>>> plugin ===>>> thinbackup plugin will install.

================================================================